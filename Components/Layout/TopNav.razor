<header class="mm-header">
    <div class="mm-header__container">
        <a class="mm-header__brand" href="/">Marcus &amp; Millichap</a>
        <form class="mm-header__search" @onsubmit="OnSubmit" @onsubmit:preventDefault="true">
            <input @bind="_searchTerm" placeholder="Enter a location or keyword" class="mm-search-input" />
            <button type="submit" class="mm-search-btn" aria-label="Search">
                <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true">
                    <path d="M15.5 14h-.79l-.28-.27a6.471 6.471 0 0 0 1.57-4.23C15.99 6.01 13.48 3.5 10.5 3.5S5.01 6.01 5.01 9s2.51 5.5 5.49 5.5c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l4.25 4.25c.41.41 1.08.41 1.49 0 .41-.41.41-1.08 0-1.49L15.5 14Zm-5 0C8.01 14 6 11.99 6 9.5S8.01 5 10.5 5 15 7.01 15 9.5 12.99 14 10.5 14Z" fill="currentColor"/>
                </svg>
            </button>
        </form>
        <nav class="mm-header__nav" aria-label="Primary">
            <ul class="mm-nav">
                <li class="mm-nav__item mm-nav__item--has-dropdown" aria-haspopup="true">
                    <button class="mm-nav__link mm-nav__toggle" aria-expanded="false" type="button">Auctions</button>
                    <div class="mm-dropdown" role="menu" aria-label="Auctions">
                        <div class="mm-dropdown__col">
                            <div class="mm-dropdown__title">Search</div>
                            <a class="mm-dropdown__link" href="/auctions/all" role="menuitem">All Auctions</a>
                            <a class="mm-dropdown__link" href="/auctions/ending-soonest" role="menuitem">Ending Soonest</a>
                        </div>
                        <div class="mm-dropdown__col">
                            <div class="mm-dropdown__title">Products</div>
                            <a class="mm-dropdown__link" href="/auction-platform" role="menuitem">Auction Platform</a>
                            <a class="mm-dropdown__link" href="/auction-buy" role="menuitem">Buy With Marcus &amp; Millichap Auction</a>
                            <a class="mm-dropdown__link" href="/auction-sell" role="menuitem">Sell With Marcus &amp; Millichap Auction</a>
                        </div>
                    </div>
                </li>
                <li class="mm-nav__item">
                    <a href="/comps" class="mm-nav__link">Comps</a>
                </li>
                <li class="mm-nav__item">
                    <a href="/intelligence" class="mm-nav__link">Intelligence</a>
                </li>
            </ul>

            <AuthorizeView>
                <Authorized>
                    <div class="mm-header__right user-menu d-flex align-items-center gap-3">
                        <a href="/add-listings" class="user-menu-link">Add Listings</a>
                        <a href="/saved" class="user-menu-link">Saved</a>
                        <a href="/my-listings" class="user-menu-link">My Listings</a>
                        <button type="button" class="user-menu-link" aria-label="Notifications" style="background:none;border:0;padding:0;">ðŸ””</button>
                        <button class="btn btn-outline-danger" @onclick="Logout">Log out</button>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <div class="mm-header__right d-flex align-items-center gap-3">
                        <a href="/login" class="btn btn-primary" style="cursor:pointer">Sign Up or Log In</a>
                    </div>
                </NotAuthorized>
            </AuthorizeView>

        </nav>
    </div>
</header>

@code {
    [Microsoft.AspNetCore.Components.Inject] NavigationManager Nav { get; set; } = default!;
    private string _searchTerm = string.Empty;

    private void OnSubmit()
    {
        var target = string.IsNullOrWhiteSpace(_searchTerm)
            ? "/"
            : $"/?q={Uri.EscapeDataString(_searchTerm)}";
        Nav.NavigateTo(target);
    }

    private async Task Logout()
    {
        using var client = new HttpClient { BaseAddress = new Uri(Nav.BaseUri) };
        await client.PostAsync("/auth/logout", new FormUrlEncodedContent(new Dictionary<string, string>()));
        Nav.NavigateTo("/", forceLoad: true);
    }
}
